<?xml version="1.0" encoding="utf-8"?>

<!--
/////////////////////////////////////////////////////////////////////////
// Copyright (c) 2007-09 LTRI, London Metropolitan Uni. All rights reserved.
// An Open Source Release under the GPL v3 licence  (see http://www.gnu.org/licenses/).
// Authors: Tom Boyle, Nils Millahn, Musbah Sagar, Martin Agombar.
// See http://www.glomaker.org for full details
/////////////////////////////////////////////////////////////////////////
-->

<BaseComponent xmlns="org.glomaker.shared.component.*" xmlns:mx="http://www.adobe.com/2006/mxml"
	themeColor="haloSilver"
	backgroundColor="#ffffff">
	
	<mx:Script>
		<![CDATA[
			import org.glomaker.shared.properties.StringProperty;
			import org.glomaker.shared.properties.RichTextProperty;
			import org.glomaker.shared.properties.NumericStepperProperty;
			import org.glomaker.shared.properties.NumberProperty;
			import org.glomaker.shared.properties.FilePathArrayProperty;
			import org.glomaker.shared.properties.ColourProperty;
			import org.glomaker.shared.properties.BooleanProperty;
			import org.glomaker.shared.properties.ArrayProperty;
			import org.glomaker.shared.properties.IComponentProperty;
			import org.glomaker.shared.properties.IntegerProperty;
			import org.glomaker.shared.properties.FilePathProperty;
			
			/////////////////////////////////////////////////////////////////////////
			//
			// Here are all the property fields currently available. The first
			// six have controls associated with them. The last four are used 
			// to carry data but have no associated controls.
			//
			/////////////////////////////////////////////////////////////////////////
			
			protected var boolean:BooleanProperty;
			protected var colour:ColourProperty;		
			protected var image:FilePathProperty;
			protected var integer:IntegerProperty;	
			protected var numericStepper:NumericStepperProperty;
			protected var rte:RichTextProperty;
			
			protected var string:StringProperty;
			protected var array:ArrayProperty;
			protected var fpa:FilePathArrayProperty;
			protected var number:NumberProperty;
			
			override protected function defineProperties():void
			{
				super.defineProperties();
				
				/////////////////////////////////////////////////////////////////////////
				//
				// The property fields need to be instantiated within the overridden
				// defineProperties() function. The first argument is the
				// name you wish to give to the property,
				// the second is the label text and the third is the default value.
				//
				/////////////////////////////////////////////////////////////////////////
					
				boolean = new BooleanProperty("boolean", "True or false ?: ", false);
				colour = new ColourProperty("colour", "Colour: ", 0);
				rte = new RichTextProperty("rte", "Rich Text: ", "<p>hello</p>");				
				image = new FilePathProperty("source", "File Path: ", "");
				integer = new IntegerProperty("integer", "Integer here: ", 100);
				numericStepper = new NumericStepperProperty("ns", "Stepper: ", 10);
				
				array = new ArrayProperty("array", "", [1,2,3]);
				fpa = new FilePathArrayProperty("fpa", "", ["fp1", "fp2"]);
				string = new StringProperty("string", "", "hello");
				number = new NumberProperty("number", "", -5.01);
				

				/////////////////////////////////////////////////////////////////////////
				//
				// You then have to add your property fields as shown below.
				//
				/////////////////////////////////////////////////////////////////////////
				
				addProperty(array);
				addProperty(boolean);
				addProperty(colour);
				addProperty(fpa);
				addProperty(numericStepper);
				addProperty(rte);
				addProperty(string);
				addProperty(image);
				addProperty(integer);
			}
			
			override public function propertyValuesInitialised():void
			{
				super.propertyValuesInitialised();
				
				/////////////////////////////////////////////////////////////////////////
				//
				// GlO Maker will call this function whenever your plugin
				// requires to be updated. This would happen, for example,
				// when the use jumps to a page containing your plugin.
				//
				/////////////////////////////////////////////////////////////////////////
				
				img.source = image.propValue;
				trace(array.propValue);
				trace(boolean.propValue);
				trace(colour.propValue);
				trace(fpa.propValue);
				trace(numericStepper.propValue);
				trace(rte.propValue);
				trace(string.propValue);
				trace(image.propValue);
				trace(integer.propValue);
			}
			
			override public function editablePropertyUpdated(prop:IComponentProperty):void
			{
				super.editablePropertyUpdated(prop);
				
				/////////////////////////////////////////////////////////////////////////
				//
				// This function is called whenever a user changes a value within
				// the property panel. Your plugin will need to update accordingly.
				//
				/////////////////////////////////////////////////////////////////////////
					
				trace(prop.propValue);
				
				switch(prop.propName)
				{
					case "source":
						img.source = prop.propValue;
						break;
				}
			}
		]]>
	</mx:Script>
	
	<!--
	
	This is a basic component. It extends BaseComponent. When you create your own components,
	you will need to extend from the BaseComponent class as well. This will provide you with the
	methods needed to communicate successfully with GLO Maker.
	
	-->
	
	<!--
	
	The .swf file associated with this component can be found in 
	bin-release > org > glomaker > plugin > start.
	
	-->
	
	<!--
	
	GLO Maker will also need info.xml and icon.png to work correctly.
	
	-->
	<mx:Image id="img" width="100%" height="100%"/>
</BaseComponent>
