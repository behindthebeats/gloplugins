<?xml version="1.0" encoding="utf-8"?>
<BaseComponent xmlns="org.glomaker.shared.component.*" xmlns:mx="http://www.adobe.com/2006/mxml"
	horizontalScrollPolicy="off" verticalScrollPolicy="off">
	
	<mx:Script>
		<![CDATA[
			import org.glomaker.shared.properties.PropertyField;
			import org.glomaker.shared.properties.StringField;
			import org.glomaker.shared.properties.BooleanField;
			import org.glomaker.shared.properties.RichTextField;
 
			// custom component properties
			// component architecture uses databinding - so make sure this is bindable!
			[Bindable]
			protected var textValue:RichTextField; 
			
			[Bindable]
			protected var _borderStyle:String = "solid";
			
			protected var border:BooleanField = new BooleanField("borderStyle", "Border", true);

 

			// ***************************************
			// BaseComponent overrides
			// ***************************************
			
			override protected function defineProperties():void
			{
				super.defineProperties();
				
				// add to properties list
				textValue = new RichTextField(textArea, "htmlText", "Label text", "Enter text");

				addInternalProperty(textValue);
				addEditableProperty(border);
			}
			
			override public function propertyValuesInitialised():void
			{
				textArea.htmlText = textValue.value;
				border.value ? _borderStyle = "solid" : _borderStyle = "none";
			}
			
			override public function editablePropertyUpdated(prop:PropertyField):void
			{
				if(prop == border)
				{
					border.value ? _borderStyle = "solid" : _borderStyle = "none";
				}
			}
			
			override public function prepareValuesForSave():void
			{
				textValue.value = textArea.htmlText;
			}
			
			/**
		 	* Change the mode of the component between edit (true) and display (false) modes 
		 	*/		
			override public function setEditMode(f:Boolean):void
			{
				textArea.editable = textArea.selectable = textArea.focusEnabled = f;
				
				// deselect text if switching out of edit mode
				if(!f)
					textArea.selectionBeginIndex = textArea.selectionEndIndex = 0;
			}
			
		]]>
	</mx:Script>
	
	<mx:TextArea id="textArea" width="100%" height="100%" 
		fontSize="14"
		editable="false"
		selectable="false"
		focusEnabled="false"
		borderStyle="{_borderStyle}"
		backgroundAlpha="0"/>

</BaseComponent>